name: Check Release Target Commit

on:
  release:
    types:
      - published

jobs:
  verify-commit:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Check if event is release
        if: github.event_name != 'release'
        run: |
          link="https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#release"
          echo "::error title=GitHub event is not 'release'::This workflow must be used only when 'release' triggers it.\n${link}"
          exit 100
      - name: Set envs for next steps
        id: set-envs
        run: |
          REPO=$(echo ${{github.repository}} | cut -d "/" -f2)
          echo "REPO=${REPO}" >> "$GITHUB_ENV"

          GIT_TAG=${GITHUB_REF#"refs/tags/"}
          echo "GIT_TAG=${GIT_TAG}" >> "$GITHUB_ENV"
        
          TAG="master-montana-${{ github.run_number }}-${{ github.run_attempt }}"
          echo "TAG=${TAG}" >> "$GITHUB_ENV"
          echo "TAG=${TAG}" >> "$GITHUB_OUTPUT"

      - name: Check if tag is montana-v*
        run: |
          if [[ ! "${GIT_TAG}" =~ ^"montana-v" ]]; then
            msg="You have to specify tag name that starts with 'montana-v', when you create a release"
            echo "::error title=Tag of the release is not montana-v*::${msg}"
            exit 101
          fi
      - name: Check if release's target_commitish is master
        run: |
          target=${{github.event.release.target_commitish}}
          if [[ "${target}" != "master" ]]; then
            msg="You have to specify target: master, when you create a release"
            echo "::error title=Target of the release is not master-v*::${msg}"
            exit 102
          fi
      - name: Check if release's SHA is master
        env:
          GH_TOKEN: ${{github.token}}
        run: |
          master_sha=$(gh api /repos/${{github.repository}}/commits/master | jq -r .sha)
          release_sha=${{github.sha}}
          if [[ "${release_sha}" != "${master_sha}" ]]; then
            msg="You have to specify target: master, when you create a release"
            echo "::error title=Release is not a latest master commit::${msg}"
            exit 103
          fi
      - name: Check if commit checks are green
        env:
          GH_TOKEN: ${{github.token}}
        run: |
          checks="$(gh api /repos/${{github.repository}}/commits/${{github.sha}}/check-runs)"

          echo "::group::GitHub API response"
            echo "Commit checks:"
            echo
            echo "${checks}" | jq
          echo "::endgroup::"
          
          statuses="$(echo "${checks}" | jq -r '.check_runs[] | .conclusion')"

          while IFS= read -r status; do
            if [[ "${status}" != "success" && "${status}" != "skipped" ]] ; then
              commit_link="https://github.com/${{github.repository}}/commit/${{github.sha}}"
              msg="One or more commit checks are not successful (${status}). See ${commit_link}"
              echo "::error title=Commit is not successful::${msg}"
              exit 104
            fi
          done <<< "${statuses}"
